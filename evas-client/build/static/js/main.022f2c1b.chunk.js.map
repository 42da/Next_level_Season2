{"version":3,"sources":["pages/SignIn.jsx","components/DrawerAppBar.jsx","components/ApplicationForm.jsx","components/CustomTabPanel.jsx","components/CustomCalendar.jsx","pages/Main.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Copyright","props","React","Typography","Object","assign","variant","color","align","Link","href","Date","getFullYear","defaultTheme","createTheme","SignIn","navigate","useNavigate","ThemeProvider","theme","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockPersonIcon","onSubmit","event","preventDefault","data","FormData","currentTarget","axios","post","loginId","get","password","then","response","employeeId","alert","catch","error","console","log","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","Button","mb","Grid","container","item","xs","navItems","DrawerAppBar","window","mobileOpen","setMobileOpen","handleDrawerToggle","prevState","drawer","onClick","textAlign","my","Divider","List","map","ListItem","key","disablePadding","ListItemButton","ListItemText","primary","undefined","document","body","AppBar","Toolbar","IconButton","aria-label","edge","mr","sm","MenuIcon","flexGrow","Drawer","open","onClose","ModalProps","keepMounted","boxSizing","width","p","ApplicationForm","_ref","reset","setReset","vacation","setVacation","useState","vactionReason","setVactionReason","useEffect","createElement","Fragment","FormControl","pb","InputLabel","Select","labelId","onChange","target","MenuItem","LocalizationProvider","dateAdapter","AdapterDayjs","DesktopDateRangePicker","defaultValue","dayjs","toLocaleDateString","createData","calories","fat","carbs","protein","rows","CustomTabPanel","dense","setDense","secondary","setSecondary","role","hidden","index","concat","aria-labelledby","pt","Stack","direction","spacing","justifyContent","resetHandler","startIcon","ResetTv","submit","passwd","endIcon","SendIcon","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","row","border","scope","content","EditIcon","moment","locale","localizer","momentLocalizer","CustomCalendar","events","setEvents","start","end","title","toDate","add","handleSelect","useCallback","prompt","prev","style","height","Calendar","startAccessor","endAccessor","padding","eventPropGetter","eventStyleGetter","isSelected","backgroundColor","isHoliday","borderRadius","opacity","components","dayCellWrapper","_ref2","children","isWeekend","day","cloneElement","Children","only","popup","selectable","onSelectSlot","Main","setValue","setContent","empolyeeId","pl","Tabs","handleChange","newValue","borderBottom","borderColor","centered","Tab","App","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.022f2c1b.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockPersonIcon from '@mui/icons-material/LockPerson';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n// TODO remove, this demo shouldn't need to reset the theme.\r\n\r\nconst defaultTheme = createTheme();\r\n\r\nexport default function SignIn() {\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    \r\n    axios.post('http://localhost:8080/login', {\r\n      loginId: data.get('id'),\r\n      password: data.get('passwd'),\r\n    }).then((response) => {\r\n      if (response.data.employeeId) { // response.responseText.indexOf('ok') > -1) {\r\n        // 로그인 성공\r\n        navigate('/main');\r\n      } else alert('로그인 실패');\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n    \r\n    //navigate('/main');\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={defaultTheme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockPersonIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"id\"\r\n              label=\"id\"\r\n              name=\"id\"\r\n              autoComplete=\"id\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"passwd\"\r\n              label=\"Passwd\"\r\n              type=\"passwd\"\r\n              id=\"passwd\"\r\n              autoComplete=\"current-passwd\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 8, mb: 4 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Divider from '@mui/material/Divider';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst drawerWidth = 240;\r\nconst navItems = ['Sign Out', 'About', 'Contact'];\r\n\r\nfunction DrawerAppBar(props) {\r\n  const { window } = props;\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const drawer = (\r\n    <Box onClick={handleDrawerToggle} sx={{ textAlign: 'center' }}>\r\n      <Typography variant=\"h6\" sx={{ my: 2 }}>\r\n        MUI\r\n      </Typography>\r\n      <Divider />\r\n      <List>\r\n        {navItems.map((item) => (\r\n          <ListItem key={item} disablePadding>\r\n            <ListItemButton sx={{ textAlign: 'center' }}>\r\n              <ListItemText primary={item} />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex' }}>\r\n      <CssBaseline />\r\n      <AppBar component=\"nav\">\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            sx={{ mr: 2, display: { sm: 'none' } }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            variant=\"h6\"\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\r\n          >\r\n            NLEVAS\r\n          </Typography>\r\n          <Box sx={{ display: { xs: 'none', sm: 'block' } }}>\r\n            {navItems.map((item) => (\r\n              <Button key={item} sx={{ color: '#fff' }}>\r\n                {item}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav>\r\n        <Drawer\r\n          container={container}\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n          sx={{\r\n            display: { xs: 'block', sm: 'none' },\r\n            '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </nav>\r\n      <Box component=\"main\" sx={{ p: 3 }}>\r\n        <Toolbar />\r\n        <Typography>\r\n          \r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nDrawerAppBar.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default DrawerAppBar;","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport TextField from '@mui/material/TextField';\r\nimport dayjs from 'dayjs';\r\nimport { DemoContainer, DemoItem } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DesktopDateRangePicker } from '@mui/x-date-pickers-pro/DesktopDateRangePicker';\r\n\r\nfunction ApplicationForm({ reset, setReset }) {\r\n    const [vacation, setVacation] = useState('');\r\n    const [vactionReason, setVactionReason] = useState('');\r\n\r\n    const handleChange = (event) => {\r\n        setVacation(event.target.value);\r\n    };\r\n    const handleChangeReason = (event) => {\r\n        setVactionReason(event.target.value);\r\n    };\r\n    useEffect(() => {\r\n        if (reset) {\r\n            setVacation('');\r\n            setVactionReason('');\r\n            setReset(false);\r\n        }\r\n    }, [reset]);\r\n    return (\r\n        <>\r\n            <FormControl fullWidth sx={{ pb: 3 }}>\r\n                <InputLabel id=\"demo-simple-select-label\">연차 종류</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={vacation}\r\n                    label=\"연차 종류\"\r\n                    onChange={handleChange}\r\n                >\r\n                    <MenuItem value={10}>연차</MenuItem>\r\n                    <MenuItem value={20}>연차)오전반차</MenuItem>\r\n                    <MenuItem value={30}>연차)오후반차</MenuItem>\r\n                    <MenuItem value={30}>대체휴가</MenuItem>\r\n                    <MenuItem value={30}>경조휴가</MenuItem>\r\n                    <MenuItem value={30}>출산육아휴가</MenuItem>\r\n                    <MenuItem value={30}>기타</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <TextField value={vactionReason} onChange={handleChangeReason} sx={{ pb: 3, width: '100%' }} id=\"outlined-basic\" label=\"연차 사유\" variant=\"outlined\" />\r\n\r\n            <LocalizationProvider dateAdapter={AdapterDayjs} >\r\n                {/* <DemoContainer\r\n                    components={[\r\n                        'DesktopDateRangePicker',\r\n                    ]}\r\n                >\r\n                    <DemoItem label=\"연차 기간\" component=\"DesktopDateRangePicker\"> */}\r\n                        <DesktopDateRangePicker\r\n                            defaultValue={[dayjs(new Date().toLocaleDateString()), dayjs(new Date().toLocaleDateString())]}\r\n                        />\r\n                    {/* </DemoItem>\r\n                </DemoContainer> */}\r\n            </LocalizationProvider>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ApplicationForm;","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport Stack from '@mui/material/Stack';\r\nimport ResetTv from '@mui/icons-material/ResetTv';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport ApplicationForm from \"./ApplicationForm\";\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData('연차', '23-01-01', '그냥', '대기', '미사용'),\r\n    createData('오전반차', '23-01-01', '퇴사를 위한 자기계발', '승인', '사용'),\r\n    createData('오후반차', '23-01-01', '개인 사유', '반려', '미사용'),\r\n    createData('대체휴가', '23-01-01', '숙취로 인한 휴가', '반려', '미사용'),\r\n    createData('경조사휴가', '23-01-01', '결혼식', '대기', '미사용'),\r\n];\r\n\r\nfunction CustomTabPanel(props) {\r\n    const [dense, setDense] = useState(false);\r\n    const [secondary, setSecondary] = useState(false);\r\n    const [reset, setReset] = useState(false);\r\n    const resetHandler = () => {\r\n        setReset(true);\r\n    }\r\n    const submit = () => {\r\n        // 신청\r\n        axios.post('http://localhost:8080/main/application', {\r\n            id: \"test\",\r\n            passwd: \"test\",\r\n        }).then((response) => {\r\n\r\n\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={props.value !== props.index}\r\n            id={`simple-tabpanel-${props.index}`}\r\n            aria-labelledby={`simple-tab-${props.index}`}\r\n        >\r\n            {props.value === 0 && (\r\n                <>\r\n                    <Box sx={{ pt: 3 }}>\r\n                        <ApplicationForm reset={reset} setReset={setReset} />\r\n                    </Box>\r\n                    <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\" sx={{ pt: 3 }}>\r\n                        <Button onClick={resetHandler} variant=\"outlined\" startIcon={<ResetTv />}>\r\n                            초기화\r\n                        </Button>\r\n                        <Button onClick={submit} variant=\"contained\" endIcon={<SendIcon />}>\r\n                            신청\r\n                        </Button>\r\n                    </Stack>\r\n                </>\r\n            )}\r\n            {props.value === 1 && (\r\n                <Box sx={{ pt: 3 }}>\r\n                    <TableContainer component={Paper}>\r\n                        <Table sx={{ width: '100%' }} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">연차 종류</TableCell>\r\n                                    <TableCell align=\"center\">기간</TableCell>\r\n                                    <TableCell align=\"center\">사유</TableCell>\r\n                                    <TableCell align=\"center\">상태</TableCell>\r\n                                    <TableCell align=\"center\">사용 유무</TableCell>\r\n                                    <TableCell align=\"center\">수정</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow\r\n                                        key={row.name}\r\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                    >\r\n                                        <TableCell align=\"center\" scope=\"row\">\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">{row.calories}</TableCell>\r\n                                        <TableCell align=\"center\">{props.content}</TableCell>\r\n                                        <TableCell align=\"center\">{row.carbs}</TableCell>\r\n                                        <TableCell align=\"center\">{row.protein}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Button endIcon={<EditIcon />} />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Box>\r\n            )}\r\n            {props.value === 2 && (\r\n                <Box sx={{ pt: 3 }}>\r\n                    <TableContainer component={Paper}>\r\n                        <Table sx={{ width: '100%' }} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">연차 종류</TableCell>\r\n                                    <TableCell align=\"center\">기간</TableCell>\r\n                                    <TableCell align=\"center\">사유</TableCell>\r\n                                    <TableCell align=\"center\">상태</TableCell>\r\n                                    <TableCell align=\"center\">사용 유무</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow\r\n                                        key={row.name}\r\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                    >\r\n                                        <TableCell align=\"center\" scope=\"row\">\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">{row.calories}</TableCell>\r\n                                        <TableCell align=\"center\">{row.fat}</TableCell>\r\n                                        <TableCell align=\"center\">{row.carbs}</TableCell>\r\n                                        <TableCell align=\"center\">{row.protein}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomTabPanel;","import React, { useCallback, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ko'; // For moment's locale settings\r\n\r\n// Localizer for the calendar\r\nmoment.locale('ko');\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nconst CustomCalendar = () => {\r\n  \r\n  \r\n  const [events, setEvents] = useState([\r\n    {\r\n      start: new Date(2023, 11, 28, 9, 0, 0), // date 불러오기\r\n      end: new Date(2023, 11, 28, 18, 0, 0),   // 언제까지 불러올지\r\n      title: 'Some title',\r\n    },\r\n    {\r\n      start: moment().toDate(), // date 불러오기\r\n      end: moment().add(2, 'days').toDate(),   // 언제까지 불러올지\r\n      title: 'Some title2',\r\n    },\r\n    {\r\n      start: moment().toDate(), // date 불러오기\r\n      end: moment().add(3, 'days').toDate(),   // 언제까지 불러올지\r\n      title: 'Some title3',\r\n    }\r\n    // ... more events ...\r\n  ]);\r\n\r\n  const handleSelect = useCallback(({ start, end }) => {\r\n    const title = window.prompt('New Event name');\r\n    if (title)\r\n      setEvents(prev => [\r\n        ...prev,\r\n        {\r\n          start,\r\n          end,\r\n          title,\r\n        },\r\n      ]);\r\n  }, [setEvents]);\r\n// Custom event style getter\r\nconst eventStyleGetter = (event, start, end, isSelected) => {\r\n    let style = {\r\n      backgroundColor: event.isHoliday ? 'red' : 'lightblue',\r\n      borderRadius: '0px',\r\n      opacity: 0.8,\r\n      color: 'white',\r\n      border: '0px',\r\n      display: 'block',\r\n    };\r\n    return {\r\n      style: style\r\n    };\r\n  };\r\n  // Custom day cell wrapper\r\n  const CustomDayCellWrapper = ({ children, value }) => {\r\n    const isWeekend = value.day() === 0 || value.day() === 6; // 0 for Sunday, 6 for Saturday\r\n    return React.cloneElement(React.Children.only(children), {\r\n      style: {\r\n        ...children.props.style,\r\n        backgroundColor: isWeekend ? 'rgba(255, 0, 0, 0.1)' : undefined,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <div style={{ height: '700px' }}>\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: 700, padding: '20px' }}\r\n        eventPropGetter={eventStyleGetter}\r\n        components={{\r\n            dayCellWrapper: CustomDayCellWrapper,\r\n          }}\r\n        popup // +숫자 클릭시 팝업으로 띄워줌. 아니면 week 로 감.\r\n        selectable  // 각 날짜 slot 선택 가능\r\n        onSelectSlot={handleSelect}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomCalendar;","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport { Grid } from '@mui/material';\r\n\r\nimport DrawerAppBar from \"../components/DrawerAppBar\";\r\nimport CustomTabPanel from \"../components/CustomTabPanel\";\r\nimport CustomCalendar from '../components/CustomCalendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport axios from \"axios\";\r\n\r\nfunction Main() {\r\n  const [value, setValue] = useState(1);\r\n  const [content, setContent] = useState('');\r\n  \r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  \r\n  const refresh = () => {\r\n    axios.post('http://localhost:8080/main/vacationList', {\r\n      empolyeeId: \"R20220202\",\r\n    }).then((response) => {\r\n      \r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // 데이터 요청\r\n    // 신청 현황, 연차 목록, calander 에 뿌려줄 데이터\r\n    axios.post('http://localhost:8080/main', {\r\n      empolyeeId: \"R20220202\",\r\n    }).then((response) => {\r\n      \r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <DrawerAppBar />\r\n      <Grid container spacing={2} sx={{pl: 2}}>\r\n        <Grid item xs={6} >\r\n          <Tabs variant=\"fullWidth\" value={value} onChange={handleChange} sx={{ borderBottom: 1, borderColor: 'divider' }} centered>\r\n            <Tab label=\"연차 신청\" />\r\n            <Tab label=\"신청 현황\" />\r\n            <Tab label=\"연차 목록\" />\r\n          </Tabs>\r\n          <CustomTabPanel value={value} index={0} />\r\n          <CustomTabPanel value={value} content={content} index={1} />\r\n          <CustomTabPanel value={value} index={2} />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <CustomCalendar />\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\n\r\nimport SignIn from \"./pages/SignIn\";\r\nimport Main from \"./pages/Main\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<SignIn />} />\r\n      <Route path=\"/main\" element={<Main />} />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App.jsx';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}