{"version":3,"sources":["pages/SignIn.jsx","components/DrawerAppBar.jsx","data/holiday.js","components/ApplicationForm.jsx","components/CustomTabPanel.jsx","components/CustomCalendar.jsx","pages/Main.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Copyright","props","React","Typography","Object","assign","variant","color","align","Link","href","Date","getFullYear","defaultTheme","createTheme","SignIn","navigate","useNavigate","ThemeProvider","theme","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockPersonIcon","onSubmit","event","preventDefault","data","FormData","currentTarget","axios","post","loginId","get","password","then","response","employeeId","state","resetVacationDate","isAdmin","console","log","alert","catch","error","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","Button","mb","Grid","container","item","xs","drawerWidth","navItems","DrawerAppBar","window","mobileOpen","setMobileOpen","useState","handleDrawerToggle","prevState","navToFunc","navItem","toLowerCase","adminComp","setAdminComp","useEffect","length","splice","drawer","onClick","textAlign","my","Divider","List","map","ListItem","key","disablePadding","ListItemButton","ListItemText","primary","undefined","document","body","AppBar","Toolbar","IconButton","aria-label","edge","mr","sm","MenuIcon","flexGrow","Drawer","open","onClose","ModalProps","keepMounted","& .MuiDrawer-paper","boxSizing","width","p","moment","locale","dayjs","holiday","year","fixedDay","dynamicDay","obj","result","result_moment","forEach","day","push","concat","result_dayjs","createHoliday","dateVersion","ApplicationForm","vacation","setVacation","vacationReason","setVacationReason","sendData","setSendData","idx","code","start","end","content","date","modifyOrCancel","setModifyOrCancel","getInfoByIdx","applicationList","filter","row","getWeekDays","startDate","endDate","some","isSame","format","add","reset","setReset","submit","url","isModify","rowIdx","vacationList","responseData","newData","approvalStatus","cancellationContent","rejection","useStatus","modifiedList","modify","setData","calendarList","setValue","info","createElement","Fragment","FormControl","InputLabel","Select","labelId","onChange","target","MenuItem","LocalizationProvider","dateAdapter","AdapterDayjs","Stack","direction","spacing","justifyContent","DatePicker","shouldDisableDate","disablePast","handleChangeDate","startOrEnd","formattedDate","[object Object]","pt","startIcon","Edit","resetHandler","ResetTv","endIcon","SendIcon","EmployeeList","pb","size","minWidth","employee","i","CustomTabPanel","setEmployee","setDate","modifyOpen","setModifyOpen","handleChange","temp","role","hidden","index","aria-labelledby","TableContainer","Paper","maxHeight","Table","TableHead","TableRow","TableCell","TableBody","&:last-child td, &:last-child th","border","scope","EditIcon","fontSize","vacationIdx","deleteList","DeleteIcon","style","padding","colSpan","Collapse","in","timeout","unmountOnExit","DoDisturbOnIcon","extend","isBetween","localizer","dayjsLocalizer","CustomCalendar","currDate","setCurrDate","events","setEvents","onRangeChange","useCallback","range","subtract","checkHoliday","calendarData","startEnd","dateArr","split","j","getholidayArr","title","handleSelect","_ref","prompt","prev","dayPropGetter","backgroundColor","height","Calendar","eventPropGetter","eventStyleGetter","isSelected","borderRadius","opacity","components","dayCellWrapper","_ref2","children","isWeekend","cloneElement","Children","only","popup","selectable","onSelectSlot","views","Main","useLocation","pl","Card","CardContent","gutterBottom","Tabs","newValue","borderBottom","borderColor","centered","Tab","App","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","BrowserRouter"],"mappings":"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","file":"static/js/main.4b208cd3.chunk.js","sourcesContent":["import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockPersonIcon from '@mui/icons-material/LockPerson';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n// TODO remove, this demo shouldn't need to reset the theme.\n\nconst defaultTheme = createTheme();\n\nexport default function SignIn() {\n  const navigate = useNavigate();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    \n    axios.post('http://localhost:8080/login', {\n      loginId: data.get('id'),\n      password: data.get('passwd'),\n    }).then((response) => {\n      if (response.data.employeeId) { // response.responseText.indexOf('ok') > -1) {\n        // 로그인 성공\n        navigate('/main', {state: {employeeId: response.data.employeeId,\n          resetVacationDate: response.data.resetVacationDate,\n          isAdmin: response.data.isAdmin} });\n        console.log(\"login response : \", response.data);\n      } else alert('로그인 실패');\n    }).catch((error) => {\n      console.log(error);\n    });\n    \n    //navigate('/main');\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockPersonIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"id\"\n              label=\"id\"\n              name=\"id\"\n              autoComplete=\"id\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"passwd\"\n              label=\"Passwd\"\n              type=\"passwd\"\n              id=\"passwd\"\n              autoComplete=\"current-passwd\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 8, mb: 4 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Divider from '@mui/material/Divider';\nimport Drawer from '@mui/material/Drawer';\nimport IconButton from '@mui/material/IconButton';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\nconst drawerWidth = 240;\nlet navItems = ['Sign Out', 'About', 'Contact'];\n\nfunction DrawerAppBar(props) {\n  const { window } = props;\n\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const navigate = useNavigate();\n\n  const handleDrawerToggle = () => {\n    setMobileOpen((prevState) => !prevState);\n  };\n\n  const handleSignOut = () => {\n    navigate('/');\n  }\n  \n  const handleChangeToAdminOrUser = () => {\n    props.adminComp ? navItems[0] = 'Change To Admin' : navItems[0] = 'Change To User';\n    props.setAdminComp(!props.adminComp);\n  }\n\n  const navToFunc = (navItem) => {\n    switch (navItem.toLowerCase()) {\n      case 'change to admin':\n      case 'change to user':\n        handleChangeToAdminOrUser();\n        break;\n      case 'sign out':\n        handleSignOut();\n        break;\n      default: break;\n    } \n  }\n  useEffect(() => {\n    if (props.isAdmin) {\n      if (navItems.length === 3) navItems.splice(0, 0, \"Change To Admin\");\n      else if (navItems[0] == \"Change To User\") navItems[0] = \"Change To Admin\";\n    }\n  }, []);\n\n  const drawer = (\n    <Box onClick={handleDrawerToggle} sx={{ textAlign: 'center' }}>\n      <Typography variant=\"h6\" sx={{ my: 2 }}>\n        MUI\n      </Typography>\n      <Divider />\n      <List>\n        {navItems.map((item) => (\n          <ListItem key={item} disablePadding>\n            <ListItemButton sx={{ textAlign: 'center' }}>\n              <ListItemText primary={item} />\n            </ListItemButton>\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CssBaseline />\n      <AppBar component=\"nav\">\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            sx={{ mr: 2, display: { sm: 'none' } }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            variant=\"h6\"\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n          >\n            NLEVAS\n          </Typography>\n          <Box sx={{ display: { xs: 'none', sm: 'block' } }}>\n            {navItems.map((item) => (\n              <Button onClick={() => {navToFunc(item)}} key={item} sx={{ color: '#fff' }}>\n                {item}\n              </Button>\n            ))}\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <nav>\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n          sx={{\n            display: { xs: 'block', sm: 'none' },\n            '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </nav>\n      <Box component=\"main\" sx={{ p: 1 }}>\n        <Toolbar />\n        <Typography>\n          \n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nDrawerAppBar.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default DrawerAppBar;","import moment from 'moment';\nimport 'moment/locale/ko'; // For moment's locale settings\n\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ko'; // For dayjs's locale settings\n\n// Localizer for the calendar\nmoment.locale('ko');\n\n// ---------- dayjs version ---------- //\ndayjs.locale('ko');\n\nlet holiday = {\n    year: 2024,\n    fixedDay: [\"01-01\", \"03-01\", \"05-01\", \"05-05\", \"05-15\", \"06-06\", \"08-15\", \"10-03\", \"10-09\", \"12-25\"],\n    dynamicDay: [\"02-09\", \"02-10\", \"02-11\", \"02-12\", \"04-10\", \"05-06\", \"09-16\", \"09-17\", \"09-18\"],\n};\n\nlet createHoliday = (obj) => {\n    let result = {\n        moment: [],\n        dayjs: [],\n    };\n    let result_moment = [];\n    obj.fixedDay.forEach((day) => {\n        result_moment.push(moment(`${obj.year}-${day}`, \"YYYY-MM-DD\"));\n    });\n    obj.dynamicDay.forEach((day) => {\n        result_moment.push(moment(`${obj.year}-${day}`, \"YYYY-MM-DD\"));\n    });\n\n    let result_dayjs = [];\n    obj.fixedDay.forEach((day) => {\n        result_dayjs.push(dayjs(`${obj.year}-${day}`));\n    });\n    obj.dynamicDay.forEach((day) => {\n        result_dayjs.push(dayjs(`${obj.year}-${day}`));\n    });\n    result.moment = result_moment;\n    result.dayjs = result_dayjs;\n    return result;\n}\n\nholiday = createHoliday(holiday);\n\nexport default holiday;","import React from 'react';\nimport { useState, useEffect, useRef } from 'react';\n\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ko';\n\nimport moment from 'moment';\nimport 'moment/locale/ko'; // For moment's locale settings\n\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers';\nimport { Stack } from '@mui/system';\nimport { Button } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport ResetTv from '@mui/icons-material/ResetTv';\n\nimport axios from 'axios';\nimport Edit from '@mui/icons-material/Edit';\n\nimport holiday from \"../data/holiday\";\nimport { dayjsLocalizer } from 'react-big-calendar';\n\n// Localizer for the calendar\nmoment.locale('ko');\ndayjs.locale('ko');\n\nconst dateVersion = 'dayjs'; // 'moment' or 'dayjs'\n\nfunction ApplicationForm(props) {\n    //const today = [dayjs(new Date()), dayjs(new Date())]; // [start, end]\n    // state 로 받으면 렌더링 될 때 값이 들어가있지 않아서 아무것도 안보임.\n    // props 로 받아서 뿌려주는 것으로 변경\n    const [vacation, setVacation] = useState('');\n    const [vacationReason, setVacationReason] = useState('');\n    const [sendData, setSendData] = useState({\n        idx: \"\",\n        code: \"\",\n        start: \"\",   //dayjs(new Date().toLocaleDateString()), 2024-01-21\n        end: \"\",\n        content: \"\",\n        date: [],\n        employeeId: props.employeeId,\n    });\n    const [modifyOrCancel, setModifyOrCancel] = useState(\"modify\"); // 수정 or 취소 여부\n\n    const handleChange = (event) => {\n        setVacation(event.target.value);\n        setSendData({ ...sendData, code: event.target.value });\n    };\n    const handleChangeReason = (event) => {\n        // 수정 시 입력 안됨.(value 를 props 로 받아서 고정되는듯?)\n        setVacationReason(event.target.value);\n        setSendData({ ...sendData, content: event.target.value });\n    };\n    const handleChangeDate = (value, startOrEnd) => {\n        const formattedDate = dayjs(value).format(\"YYYY-MM-DD\");\n        setSendData({ ...sendData, [startOrEnd]: formattedDate });\n    };\n\n    const getInfoByIdx = (idx) => {     // list 에서 data idx 에 해당하는 정보 가져오기\n        return props.data.applicationList.filter((row) => row.idx === idx)[0];\n    }\n\n    const getWeekDays = (start, end) => {\n        let result = [];\n        let startDate = dayjs(start);\n        let endDate = dayjs(end);\n        while (startDate <= endDate) {\n            if (startDate.day() !== 0 && startDate.day() !== 6 && !holiday[dateVersion].some((day) => day.isSame(startDate))) {\n                result.push(startDate.format(\"YYYY-MM-DD\"));\n            }\n            startDate = startDate.add(1, \"days\");\n        }\n        return result;\n    }\n\n    const [reset, setReset] = useState(false);\n    const resetHandler = () => {\n        setReset(true);\n    }\n\n    const submit = () => {\n        let url = 'http://localhost:8080/main/';\n        if (props.isModify && modifyOrCancel === \"modify\") url += \"update\";\n        else if (modifyOrCancel === \"cancel\") url += \"cancel\";\n        else url += \"apply\";\n\n        let idx = null;\n        if (props.isModify && modifyOrCancel === \"modify\") idx = props.data.applicationList.filter((row) => row.idx === props.rowIdx)[0].idx;\n        else if (modifyOrCancel === \"cancel\") idx = props.data.vacationList.filter((row) => row.idx === props.rowIdx)[0].idx;\n        // 신청, 수정\n        axios.post(url, {\n            idx: idx,\n            code: sendData.code,\n            start: sendData.start,\n            end: sendData.end,\n            content: sendData.content,\n            date: getWeekDays(sendData.start, sendData.end),\n            employeeId: props.employeeId,\n        }).then((response) => {\n            const responseData = response.data;\n            const newData = {\n                idx: responseData.idx,\n                code: responseData.code,\n                start: responseData.start,\n                end: responseData.end,\n                content: responseData.content,\n                approvalStatus: responseData.approvalStatus, // 응답 와야함.\n                cancellationContent: responseData.cancellationContent,\n                employeeId: responseData.employeeId,\n                date: responseData.date,\n                rejection: responseData.rejection,\n                type: responseData.type,\n                useStatus: responseData.useStatus\n            };\n            if (props.isModify) {\n                console.log(\"modify response : \", responseData);\n                let modifiedList = props.data.applicationList;\n                modifiedList.splice(props.idx, 1, responseData);\n                props.modify(props.idx);\n                \n                props.setData({\n                    vacationList: [...props.data.vacationList],\n                    calendarList: [...props.data.calendarList.filter((row) => row.idx !== responseData.idx), newData],\n                    applicationList: modifiedList\n                });\n            } else {\n                console.log(\"apply response : \", responseData);\n                props.setValue(1);\n                props.setData({\n                    vacationList: [...props.data.vacationList],\n                    calendarList: [...props.data.calendarList, newData], applicationList: [...props.data.applicationList, newData]\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    useEffect(() => {\n        if (props.value !== 2) {\n            if (reset) {\n                setVacation('');\n                setVacationReason('');\n                setReset(false);\n            }\n            \n            if (props.isModify) {\n                const info = getInfoByIdx(props.rowIdx);\n                setVacation(info.code);\n                setVacationReason(info.content);\n                setSendData({ ...sendData, idx: props.rowIdx, code: info.code, content: info.content, start: info.start, end: info.end });\n            } else {\n                setSendData({ ...sendData, start: dayjs(props.date[0]).format(\"YYYY-MM-DD\"), end: dayjs(props.date[1]).format(\"YYYY-MM-DD\") });\n            }\n        } else setModifyOrCancel(\"cancel\");\n    }, [reset]);\n    return (\n        <>\n            {\n                props.value !== 2 && (\n                    <FormControl fullWidth>\n                        <InputLabel id=\"demo-simple-select-label\">연차 종류</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={vacation}\n                            label=\"연차 종류\"\n                            onChange={handleChange}\n                        >\n                            <MenuItem value={\"abs01\"}>연차</MenuItem>\n                            <MenuItem value={\"abs02\"}>연차)오전반차</MenuItem>\n                            <MenuItem value={\"abs03\"}>연차)오후반차</MenuItem>\n                            <MenuItem value={\"abs04\"}>대체휴가</MenuItem>\n                            <MenuItem value={\"abs05\"}>경조휴가</MenuItem>\n                            <MenuItem value={\"abs06\"}>출산육아휴가</MenuItem>\n                            <MenuItem value={\"abs07\"}>기타</MenuItem>\n                        </Select>\n                    </FormControl>\n                )\n            }\n\n            <TextField\n                id=\"outlined-basic\"\n                label={props.value === 2 ? \"취소 사유\" : \"연차 사유\"}\n                variant=\"outlined\"\n                value={vacationReason}\n                onChange={handleChangeReason}\n                sx={{ mt: props.value === 2 ? 0 : 3, width: '100%' }}\n            />\n            {\n                props.value !== 2 && (\n                    <LocalizationProvider dateAdapter={AdapterDayjs} >\n                        {/* 주말 비활성화(shouldDisableDate) */}\n                        <Stack direction=\"row\" spacing={2} justifyContent=\"space-between\" sx={{ mt: 3 }}>\n                            {\n                                [\"start\", \"end\"].map((item, idx) => {\n                                    return (\n                                        <DatePicker\n                                            key={item}\n                                            label={item + \" Date\"}\n                                            name={item}\n                                            /*\n                                                주말 및 공휴일 비활성화 (Array.includes -> Array.some 으로 변경)\n                                                primitive type (string, number 등) 에서만 사용 가능한 includes 대신 객체 배열에서 사용 가능한 some 사용하기 위해 변경함. \n                                                한가지 의문점은 day == date 으로 하면 안되고 day.isSame(date) 으로 동작된다는 점.)\n                                            */\n\n                                            shouldDisableDate={(date) => { return date.day() === 0 || date.day() === 6 || holiday[dateVersion].some((day) => day.isSame(date)) }}\n                                            disablePast\n                                            format='YYYY/MM/DD'\n                                            sx={{ width: \"50%\" }}\n                                            onChange={(value) => handleChangeDate(value, item)}\n                                            value={props.isModify ? dayjs(getInfoByIdx(props.rowIdx)[item]) : dayjs(props.date[idx])} />\n                                    )\n                                })\n                            }\n                        </Stack>\n                    </LocalizationProvider>\n                )\n            }\n\n            <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\" sx={{ pt: 2 }}>\n                {\n                    props.isModify ? (\n                        <Button onClick={() => { submit(\"update\") }} variant=\"contained\" startIcon={<Edit />}>\n                            {modifyOrCancel === \"modify\" ? \"수정\" : \"취소\"}\n                        </Button>\n                    ) : (\n                        <>\n                            <Button onClick={resetHandler} variant=\"outlined\" startIcon={<ResetTv />}>\n                                초기화\n                            </Button>\n                            <Button onClick={() => { submit(\"application\") }} variant=\"contained\" endIcon={<SendIcon />}>\n                                신청\n                            </Button>\n                        </>\n                    )\n                }\n            </Stack>\n        </>\n    );\n}\n\nexport default ApplicationForm;","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Collapse from \"@mui/material/Collapse\";\nimport Paper from '@mui/material/Paper';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\n\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ko';\n\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport DoDisturbOnIcon from '@mui/icons-material/DoDisturbOn';\n\nimport ApplicationForm from \"./ApplicationForm\";\nimport { IconButton } from \"@mui/material\";\n\ndayjs.locale('ko');\n\nfunction CustomTabPanel(props) {\n    const [employee, setEmployee] = useState('');\n    const [date, setDate] = useState([dayjs(), dayjs()]);   // [start, end]\n\n    const [modifyOpen, setModifyOpen] = useState([]);   // 각 row 의 수정 버튼 클릭 여부\n\n    const handleChange = (event) => {\n        setEmployee(event.target.value);\n    };\n\n    const deleteList = (vacationIdx) => {\n        axios.post('http://localhost:8080/main/delete', {\n            idx: vacationIdx,\n        }).then((response) => {\n            props.setData({ vacationList: [...props.data.vacationList], calendarList: [...props.data.calendarList], applicationList: [...props.data.applicationList.filter((row) => row.idx !== response.data)] });\n            console.log(\"delete response : \", response);\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    const modify = (idx) => {       // 수정 버튼 클릭 시\n        let temp = [...modifyOpen];\n\n        temp[idx] = !temp[idx];\n        temp = temp.map((row, i) => row && idx === i ? row : false);    // 모든 수정 버튼 닫기(한번에 하나만 수정 가능)\n\n        setModifyOpen(temp);\n    }\n\n    useEffect(() => {\n        setModifyOpen([...props.data.applicationList.map(() => false)]);\n    }, [props.data.applicationList]);\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={props.value !== props.index}\n            id={`simple-tabpanel-${props.index}`}\n            aria-labelledby={`simple-tab-${props.index}`}\n        >\n            {props.value === 0 && (\n                <>\n                    <Box sx={{ pt: 3 }}>\n                        <ApplicationForm date={date} setDate={setDate} employeeId={props.employeeId} setValue={props.setValue} setData={props.setData} data={props.data} isModify={false} />\n                    </Box>\n                </>\n            )}\n            {props.value === 1 && (\n                <Box sx={{ pt: 3 }}>\n                    {(props.isAdmin && props.adminComp) && (\n                        <EmployeeList data={props.data} onChange={handleChange} employee={employee} />\n                    )}\n                    <TableContainer component={Paper} sx={{ maxHeight: 600 }}>\n                        <Table sx={{ width: '100%' }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell sx={{ width: '15%' }} align=\"center\">연차 종류</TableCell>\n                                    <TableCell sx={{ width: '25%' }} align=\"center\">기간</TableCell>\n                                    <TableCell sx={{ width: '25%' }} align=\"center\">사유</TableCell>\n                                    <TableCell sx={{ width: '10%' }} align=\"center\">상태</TableCell>\n                                    <TableCell sx={{ width: '20%' }} align=\"center\">수정 및 삭제</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {props.data.applicationList.map((row, idx) => (\n                                    <React.Fragment key={row.idx + \"application\"}>\n                                        <TableRow\n                                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                                            <TableCell sx={{ minWidth: '20%' }} align=\"center\" scope=\"row\">\n                                                {row.code}\n                                            </TableCell>\n                                            <TableCell sx={{ minWidth: '20%' }} align=\"center\">{row.start} ~ {row.end}</TableCell>\n                                            <TableCell sx={{ minWidth: '20%' }} align=\"center\">{row.content}</TableCell>\n                                            <TableCell sx={{ minWidth: '20%' }} align=\"center\">{row.approvalStatus}</TableCell>\n                                            <TableCell sx={{ minWidth: '20%' }} align=\"center\">\n                                                <IconButton onClick={() => { modify(idx) }}>\n                                                    <EditIcon fontSize=\"small\" />\n                                                </IconButton>\n                                                <IconButton onClick={() => { deleteList(row.idx) }}>\n                                                    <DeleteIcon fontSize=\"small\" />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell style={{ padding: 0, border: 0 }} colSpan={5}>\n                                                <Collapse in={modifyOpen[idx]} timeout=\"auto\" unmountOnExit>\n                                                    <Table aria-label=\"modify vacation\" sx={{ width: '100%' }}>\n                                                        <TableBody>\n                                                            <TableRow>\n                                                                <TableCell align=\"left\" scope=\"row\">\n                                                                    <Box sx={{ pt: 2, }}>\n                                                                        <ApplicationForm date={date} setDate={setDate} employeeId={props.employeeId} value={props.value} setValue={props.setValue} setData={props.setData} data={props.data} isModify={true} rowIdx={row.idx} idx={idx} modify={modify} />\n                                                                    </Box>\n                                                                </TableCell>\n                                                            </TableRow>\n                                                        </TableBody>\n                                                    </Table>\n                                                </Collapse>\n                                            </TableCell>\n                                        </TableRow>\n                                    </React.Fragment>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Box>\n            )}\n            {props.value === 2 && (\n                <Box sx={{ pt: 3 }}>\n                    {(props.isAdmin && props.adminComp) && (\n                        <EmployeeList data={props.data} onChange={handleChange} employee={employee} />\n                    )}\n                    <TableContainer component={Paper}>\n                        <Table sx={{ width: '100%' }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell sx={{ width: '15%' }} align=\"center\">연차 종류</TableCell>\n                                    <TableCell sx={{ width: '25%' }} align=\"center\">기간</TableCell>\n                                    <TableCell sx={{ width: '25%' }} align=\"center\">사유</TableCell>\n                                    <TableCell sx={{ width: '10%' }} align=\"center\">상태</TableCell>\n                                    <TableCell sx={{ width: '20%' }} align=\"center\">취소</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {props.data.vacationList.map((row, idx) => (\n                                    <React.Fragment key={row.idx + \"cancel\"}>\n                                        <TableRow\n\n                                            key={row.idx + \"vacation\"}\n                                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                        >\n                                            <TableCell align=\"center\" scope=\"row\">\n                                                {row.code}\n                                            </TableCell>\n                                            <TableCell align=\"center\">{row.start} ~ {row.end}</TableCell>\n                                            <TableCell align=\"center\">{row.content}</TableCell>\n                                            <TableCell align=\"center\">{row.approvalStatus}</TableCell>\n                                            <TableCell sx={{ minWidth: '20%' }} align=\"center\">\n                                                <IconButton onClick={() => { modify(idx) }}>\n                                                    <DoDisturbOnIcon fontSize=\"small\" />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell style={{ padding: 0, border: 0 }} colSpan={5}>\n                                                <Collapse in={modifyOpen[idx]} timeout=\"auto\" unmountOnExit>\n                                                    <Table aria-label=\"modify vacation\" sx={{ width: '100%' }}>\n                                                        <TableBody>\n                                                            <TableRow>\n                                                                <TableCell align=\"left\" scope=\"row\">\n                                                                    <Box sx={{ pt: 2, }}>\n                                                                        <ApplicationForm employeeId={props.employeeId} value={props.value} setValue={props.setValue} setData={props.setData} data={props.data} isModify={true} rowIdx={row.idx} idx={idx} modify={modify} />\n                                                                    </Box>\n                                                                </TableCell>\n                                                            </TableRow>\n                                                        </TableBody>\n                                                    </Table>\n                                                </Collapse>\n                                            </TableCell>\n                                        </TableRow>\n                                    </React.Fragment>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nfunction EmployeeList(props) {\n    return (\n        <Box sx={{ pb: 3, display: 'flex', justifyContent: \"flex-end\" }}>\n            <FormControl size=\"small\" sx={{ minWidth: 250 }}>\n                <InputLabel id=\"demo-simple-select-label\">사원 정보</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={props.employee}\n                    label=\"사원 정보\"\n                    onChange={props.onChange}\n                >\n                    {props.data.applicationList.map((row, i) => (<MenuItem key={i} value={row.employeeId}>{row.employeeId} 이름</MenuItem>))}\n\n                </Select>\n            </FormControl>\n        </Box>\n    );\n}\n\nexport default CustomTabPanel;","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Calendar, momentLocalizer, dayjsLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'moment/locale/ko'; // For moment's locale settings\n\nimport dayjs from 'dayjs';\nimport isBetween from 'dayjs/plugin/isBetween';\nimport 'dayjs/locale/ko';\n\nimport holiday from '../data/holiday';\nimport { date } from 'date-arithmetic';\n\n// Localizer for the calendar\nmoment.locale('ko');\ndayjs.locale('ko');\ndayjs.extend(isBetween);\n\nconst dateVersion = 'dayjs'; // 'moment' or 'dayjs'\n\n//const localizer = momentLocalizer(moment);\nconst localizer = dayjsLocalizer(dayjs);\n\nconst CustomCalendar = (props) => {\n  const [currDate, setCurrDate] = useState(dayjs());\n  const [events, setEvents] = useState([]);\n  \n  const onRangeChange = useCallback((range) => {\n    \n    if (currDate < dayjs(range.end)) { // 현재 달이 end 보다 작으면 next\n      if (currDate.add(1, \"month\").isBetween(dayjs(range.start), dayjs(range.end))) { // today 눌렀을 때 처리\n        setCurrDate(currDate.add(1, \"month\")); \n      } else setCurrDate(dayjs());\n    } else {\n      if (currDate.subtract(1, \"month\").isBetween(dayjs(range.start), dayjs(range.end))) {  // today 눌렀을 때 처리\n        setCurrDate(currDate.subtract(1, \"month\"));\n      } else setCurrDate(dayjs());\n    }\n  }, [currDate]);\n  const checkHoliday = (date) => {\n    for (let i = 0; i < holiday[dateVersion].length; i++) \n    {\n      if (dayjs(date).isSame(holiday[dateVersion][i]) && dayjs(date).isSame(currDate, \"month\")) { // && (holiday[i].isSameOrBefore(moment(), \"month\") && holiday[i].isSameOrAfter(moment(), \"month\"))) {\n        return true;\n      }\n    }\n    return false;\n  }\n  useEffect(() => {\n    const getholidayArr = (calendarData) => {\n      let result = [];\n      for (let i = 0; i < calendarData.length; i++) {\n        let startEnd = {\n          start: '',\n          end: '',\n          employeeId: calendarData[i].employeeId,\n        }\n        let dateArr = calendarData[i].date.split(\",\");\n        if (dateArr.length === 1) {\n          result.push({...startEnd, start: dateArr[0], end: dateArr[0]});\n          continue;\n        }\n        startEnd.start = dateArr[0];\n        \n        for (let j = 0; j < dateArr.length; j++) {\n          if (j === dateArr.length - 1) {\n            result.push({...startEnd, end: dateArr[j]});\n          } else if (!dayjs(dateArr[j]).add(1, \"day\").isSame(dayjs(dateArr[j+1]))) {\n            result.push({...startEnd, end: dateArr[j]});\n            startEnd.start = dateArr[j+1];\n          }\n        }\n      }\n      return result;\n    };\n    console.log(\"calendarData : \", props.data);\n    setEvents(getholidayArr(props.data).map((item) => {\n      return {\n        start: new Date(item.start), //new Date(\"2023-11-01\"), // date 불러오기\n        end: new Date(item.end), //end: new Date(\"2023-11-02\"),   // 언제까지 불러올지\n        title: item.employeeId, //title: 'Some title', // employeeId\n      }\n    }));\n  }, [props.data]);\n\n  const handleSelect = useCallback(({ start, end }) => {\n    const title = window.prompt('New Event name');\n    if (title)\n      setEvents(prev => [\n        ...prev,\n        {\n          start,\n          end,\n          title,\n        },\n      ]);\n  }, [setEvents]);\n  // Custom event style getter\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    let style = {\n      backgroundColor: event.title === props.employeeId ? 'rgba(255, 0, 0, 0.1)' : 'lightblue',\n      borderRadius: '0px',\n      opacity: 0.8,\n      color: 'black',\n      border: '0px',\n      display: 'block',\n    };\n    return {\n      style: style\n    };\n  };\n  // Custom day cell wrapper\n  const CustomDayCellWrapper = ({ children, value }) => {\n    const isWeekend = value.day() === 0 || value.day() === 6; // 0 for Sunday, 6 for Saturday\n    return React.cloneElement(React.Children.only(children), {\n      style: {\n        ...children.props.style,\n        backgroundColor: isWeekend ? 'rgba(255, 0, 0, 0.1)' : undefined,\n      },\n    });\n  };\n  const dayPropGetter = useCallback(\n    (date) => {return ({\n      ...((((dayjs(date).day() === 0 || dayjs(date).day() === 6) && dayjs(date).isSame(currDate, \"month\")) || checkHoliday(date)) && {\n        style: {\n          backgroundColor: 'rgba(255, 0, 0, 0.1)',\n        }\n      }),\n    })},\n    [currDate]\n  );\n  return (\n    <div style={{ height: '700px' }}>\n      <Calendar\n        localizer={localizer}\n        events={events}\n        style={{ height: 700, padding: '20px' }}\n        eventPropGetter={eventStyleGetter}\n        components={{\n          dayCellWrapper: CustomDayCellWrapper,\n        }}\n        dayPropGetter={dayPropGetter}\n        popup // +숫자 클릭시 팝업으로 띄워줌. 아니면 week 로 감.\n        selectable  // 각 날짜 cell 선택 가능\n        onSelectSlot={handleSelect}\n        views={['month']}\n        onRangeChange={onRangeChange}\n      />\n    </div>\n  );\n};\n\nexport default CustomCalendar;","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\"\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport { Grid } from '@mui/material';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nimport DrawerAppBar from \"../components/DrawerAppBar\";\nimport CustomTabPanel from \"../components/CustomTabPanel\";\nimport CustomCalendar from '../components/CustomCalendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nimport axios from \"axios\";\nimport { Box } from \"@mui/system\";\n\nfunction Main() {\n  const [adminComp, setAdminComp] = useState(false); // admin component 보여줄지 여부\n  const [value, setValue] = useState(1);\n  const [data, setData] = useState({\n    applicationList: [],\n    vacationList: [],\n    calendarList: [],\n  });\n\n  const { state } = useLocation();\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const refresh = () => {\n    axios.post('http://localhost:8080/main/vacationList', {\n      employeeId: state.employeeId,\n    }).then((response) => {\n\n    }).catch((error) => {\n      console.log(error);\n    });\n  }\n\n  useEffect(() => {\n    // 데이터 요청\n    // 신청 현황, 연차 목록, calander 에 뿌려줄 데이터\n    console.log(state.employeeId);\n    axios.post('http://localhost:8080/main', {\n      employeeId: state.employeeId,\n      resetVacationDate: state.resetVacationDate, // 연차 초기화 날짜(연차 목록)\n    }).then((response) => {\n      setData(response.data);\n      console.log(\"main response : \", response);\n    }).catch((error) => {\n      console.log(error);\n    });\n  }, []);\n  return (\n    <div>\n      <DrawerAppBar adminComp={adminComp} setAdminComp={setAdminComp} isAdmin={state.isAdmin} />\n      <Grid container spacing={2} sx={{ pl: 2 }}>\n        <Grid item xs={6} sx={{ display: 'flex', justifyContent: \"flex-end\"}}>\n            <Card sx={{ minWidth: 200, justifyContent: \"flex-end\" }} variant=\"outlined\">\n              <CardContent align=\"right\">\n                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                  연차\n                </Typography>\n                <Typography variant=\"h5\" component=\"div\">\n                  15/20\n                </Typography>\n              </CardContent>\n              {/* <CardActions>\n            <Button size=\"small\">Learn More</Button>\n          </CardActions> */}\n            </Card>\n        </Grid>\n        <Grid item xs={6}>\n          <Box sx={{maxWidth: 200, backgroundColor: \"black\"}}>\n          </Box>\n        </Grid>\n        <Grid item xs={6} >\n          <Tabs variant=\"fullWidth\" value={value} onChange={handleChange} sx={{ borderBottom: 1, borderColor: 'divider' }} centered>\n            <Tab label=\"연차 신청\" />\n            <Tab label={adminComp ? \"전체 신청 현황\" : \"신청 현황\"} />\n            <Tab label={adminComp ? \"전체 연차 목록\" : \"연차 목록\"} />\n          </Tabs>\n          <>\n            {\n              [0, 1, 2].map((index) => {\n                return (\n                  <CustomTabPanel key={index}\n                    adminComp={adminComp}\n                    isAdmin={state.isAdmin}\n                    setValue={index !== 2 ? setValue : null}\n                    setData={index !== 2 ? setData : null}\n                    employeeId={state.employeeId}\n                    data={data}\n                    value={value}\n                    index={index} />\n                )\n              })\n            }\n          </>\n        </Grid>\n        <Grid item xs={6}>\n          <CustomCalendar data={data.calendarList} employeeId={state.employeeId} />\n        </Grid>\n      </Grid>\n\n    </div>\n  );\n}\n\nexport default Main;","import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\n\nimport SignIn from \"./pages/SignIn\";\nimport Main from \"./pages/Main\";\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<SignIn />} />\n      <Route path=\"/main\" element={<Main />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  // </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}